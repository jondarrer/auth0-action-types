{
  "api.cache": {
    "id": "api.cache",
    "type": "object",
    "descriptions": [
      "Store and retrieve data that persists across executions."
    ],
    "title": "ApiCache",
    "parentId": "api",
    "globalName": "ApiCache"
  },
  "api.cache.delete": {
    "id": "api.cache.delete",
    "type": "function",
    "paramNames": [
      "key"
    ],
    "descriptions": [
      "Delete a record describing a cached value at the supplied key if it exists.",
      "Returns a CacheWriteResult object with  type: \"success\" if a value was removed from the cache. A failed operation returns type: \"error\". For errors, the returned object will have a\n    code property that indicates the nature of the failure."
    ],
    "title": "delete",
    "parentId": "api.cache",
    "globalName": "ApiCacheDelete",
    "returnDescription": "Returns a CacheWriteResult object with  type: \"success\" if a value was removed from the cache. A failed operation returns type: \"error\". For errors, the returned object will have a\n    code property that indicates the nature of the failure.",
    "returnEntityType": "unknown"
  },
  "api.cache.delete.key": {
    "id": "api.cache.delete.key",
    "type": "string",
    "descriptions": [
      "String. The key of the record stored in the cache."
    ],
    "title": "key",
    "parentId": "api.cache.delete",
    "globalName": "ApiCacheDeleteKey"
  },
  "api.cache.get": {
    "id": "api.cache.get",
    "type": "function",
    "paramNames": [
      "key"
    ],
    "descriptions": [
      "Retrieve a record describing a cached value at the supplied\n    key, if it exists. If a record is found, the cached value can\n    be found at the value property of the returned object.",
      "Returns a cache record if an item is found in the cache for the supplied\n    key. Cache records are objects with a\n    value property holding the cached value as well as an\n    expires_at property indicating the maximum expiry of\n    the record in milliseconds since the Unix epoch.",
      "Important:\n    This cache is designed for short-lived, ephemeral data. Items may not be\n    available in later transactions even if they are within their supplied their\n    lifetime."
    ],
    "title": "get",
    "parentId": "api.cache",
    "globalName": "ApiCacheGet",
    "returnDescription": "Important:\n    This cache is designed for short-lived, ephemeral data. Items may not be\n    available in later transactions even if they are within their supplied their\n    lifetime.",
    "returnEntityType": "unknown"
  },
  "api.cache.get.key": {
    "id": "api.cache.get.key",
    "type": "string",
    "descriptions": [
      "String. The key of the record stored in the cache."
    ],
    "title": "key",
    "parentId": "api.cache.get",
    "globalName": "ApiCacheGetKey"
  },
  "api.cache.set": {
    "id": "api.cache.set",
    "type": "function",
    "paramNames": [
      "key",
      "value",
      "[options]"
    ],
    "descriptions": [
      "Store or update a string value in the cache at the specified key.",
      "Values stored in this cache are scoped to the Trigger in which they are set.\n    They are subject to the\n    Actions Cache Limits.",
      "Values stored in this way will have lifetimes of up to the specified\n    ttl or expires_at values. If no lifetime is\n    specified, a default of lifetime of 15 minutes will be used. Lifetimes may\n    not exceed the maximum duration listed at\n    Actions Cache Limits."
    ],
    "title": "set",
    "parentId": "api.cache",
    "globalName": "ApiCacheSet",
    "returnDescription": "Values stored in this way will have lifetimes of up to the specified\n    ttl or expires_at values. If no lifetime is\n    specified, a default of lifetime of 15 minutes will be used. Lifetimes may\n    not exceed the maximum duration listed at\n    Actions Cache Limits.",
    "returnEntityType": "unknown"
  },
  "api.cache.set.key": {
    "id": "api.cache.set.key",
    "type": "string",
    "descriptions": [
      "String. The key of the record stored in the cache."
    ],
    "title": "key",
    "parentId": "api.cache.set",
    "globalName": "ApiCacheSetKey"
  },
  "api.cache.set.value": {
    "id": "api.cache.set.value",
    "type": "string",
    "descriptions": [
      "String. The value of the record to be stored."
    ],
    "title": "value",
    "parentId": "api.cache.set",
    "globalName": "ApiCacheSetValue"
  },
  "api.cache.set.options": {
    "id": "api.cache.set.options",
    "type": "object",
    "descriptions": [
      "Optional object. Options for adjusting cache behavior."
    ],
    "title": "options",
    "parentId": "api.cache.set",
    "globalName": "ApiCacheSetOptions"
  },
  "api.cache.set.options.expires_at": {
    "id": "api.cache.set.options.expires_at",
    "type": "unknown",
    "descriptions": [
      "Optional number. The absolute expiry time in milliseconds\n            since the unix epoch. While cached records may be evicted earlier,\n            they will never remain beyond the the supplied\n            expires_at.",
      "Note: This value should not be supplied if a value was also\n            provided for ttl. If both options are supplied, the\n            earlier expiry of the two will be used."
    ],
    "title": "ApiCacheSetOptionsExpires_at",
    "parentId": "api.cache.set.options",
    "globalName": "ApiCacheSetOptionsExpires_at"
  },
  "api.cache.set.options.ttl": {
    "id": "api.cache.set.options.ttl",
    "type": "unknown",
    "descriptions": [
      "Optional number. The time-to-live value of this cache entry\n            in milliseconds. While cached values may be evicted earlier, they\n            will never remain beyond the the supplied ttl.",
      "Note: This value should not be supplied if a value was also\n            provided for expires_at. If both options are supplied,\n            the earlier expiry of the two will be used."
    ],
    "title": "ApiCacheSetOptionsTtl",
    "parentId": "api.cache.set.options",
    "globalName": "ApiCacheSetOptionsTtl"
  }
}